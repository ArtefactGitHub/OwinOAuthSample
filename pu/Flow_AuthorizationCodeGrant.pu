@startuml
title Flow_AuthorizationCodeGrant
hide footbox

participant "**Resource Owner**\n**利用者**" as User

participant "**User Agent**\n**ブラウザ**" as Agent

box "**Client**\nhttp://localhost:38500"
    participant "**クライアント画面**\n\nｸﾗｲｱﾝﾄId = 123456\nｸﾗｲｱﾝﾄｼｰｸﾚｯﾄ = abcdef" as Client
end box

box "**AuthZServer**\nhttp://localhost:11625"
    participant "**認可ｴﾝﾄﾞﾎﾟｲﾝﾄ**\n**認可確認画面**\n\n/OAuth/Authorize" as AuthZCode
    participant "**ログイン画面**\n\n\n/Account/Login" as AuthZLogin
    participant "**ﾄｰｸﾝｴﾝﾄﾞﾎﾟｲﾝﾄ**\n\n\n/OAuth/Token" as AuthZToken
end box

box "**ResourceServer**\nhttp://localhost:38385"
    participant "WebAPI\n\n\n/api/Test" as ResourceServer
end box

User -> Agent:操作開始
Agent -> Client:
Agent <-- Client:
note over Agent:クライアント画面
activate Agent

User -> Agent:**1.アクセストークンを**\n**取得する**

group A 認可コードの取得
    group A-1 クライアント検証
        Agent -> AuthZCode:**認可エンドポイントへのリクエスト**\n - GET
        note over AuthZCode:**クライアントIDの検証**\n- Startup.ValidateClientRedirectUri()\n - OAuthController.Authorize()
        Agent <-- AuthZCode:**認可エンドポイントからのレスポンス**\n - 302 リダイレクト
    end group

    Agent -> AuthZLogin:**リダイレクト**\n - GET
deactivate Agent
    Agent <-- AuthZLogin:**ログイン画面**\n - 200 OK
activate Agent
    note over Agent:ログイン画面
    User --> Agent:ユーザーID・\nパスワードを入力\n→**ログイン**

    group A-2 ユーザー検証
        Agent -> AuthZLogin:**ログインのリクエスト**\n - POST
        note over AuthZLogin:**ユーザー名とパスワードの検証**\n - AccountController.Login()
        Agent <-- AuthZLogin:**ログインのレスポンス**\n - 302 リダイレクト
    end group

    Agent -> AuthZCode:**リダイレクト**\n - GET
    note over AuthZCode:クライアントIDの検証\n - Startup.ValidateClientRedirectUri()\n - OAuthController.Authorize()
deactivate Agent
    Agent <-- AuthZCode:**認可確認画面**\n - 200 OK
    note over Agent:認可確認画面
activate Agent
    User --> Agent:**承認してログインする**

    group A-3 認可確認
        Agent -> AuthZCode:**認可エンドポイントへのリクエスト**\n - POST
        note over AuthZCode:**クライアントIDの検証**\n - Startup.ValidateClientRedirectUri()
        note over AuthZCode:**identity生成**\n - OAuthController.Authorize()
        note over AuthZCode:**認可コード生成**\n - Startup.CreateAuthenticationCode()
        Agent <-- AuthZCode:**認可エンドポイントからのレスポンス**\n - 302 リダイレクト

        note over Agent:**認可コード取得**
    end group
end group

Agent -> Client:**リダイレクト**\n - GET
deactivate Agent
Agent <-- Client:**Response**\n - 100 Continue

group B アクセストークンの取得
    Agent -> AuthZToken:**トークンエンドポイントへのリクエスト**\n - POST
    note over AuthZToken :**クライアントID、シークレットの検証**\n - ValidateClientAuthentication()
    note over AuthZToken :**アクセストークンの生成**\n - ReceiveAuthenticationCode()
    note over AuthZToken : リフレッシュトークンの生成\n - CreateRefreshToken()

    Agent <-- AuthZToken:**トークンエンドポイントからのレスポンス**\n - 200 OK
    note over Agent:**アクセストークン取得**
end group

Agent <-- Client:**Response**\n - 200 OK
note over Agent:クライアント画面
activate Agent
User --> Agent:**2.リソースサーバーに**\n**アクセスする**

group C リソース取得

    Agent -> ResourceServer:**リソースサーバーへのリクエスト**\n - GET
    note over ResourceServer:**アクセストークンの検証**\n - TestController.Get()の[Authorize]属性\n - 検証処理はOWINが勝手にやる
    note over ResourceServer:**Responseの生成**\n - TestController.Get()
    Agent <-- ResourceServer:**リソースサーバーからのレスポンス**\n - 200 OK

    note over Agent:**リソース取得**
end group

Agent -> Client:**クライアント画面更新**\n - {Identity.Name}表示
Agent <-- Client:

@enduml
